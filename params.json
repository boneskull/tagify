{"name":"Tagify","tagline":"A jQuery plugin to create a \"tagified\" UI control out of a normal text input.","body":"jQuery.tagify\r\n=============\r\n\r\nA simple UI control to turn any text input into a \"tagified\" UI control.  The value of the input will be split on the specified delimiter and create one tag for each item in the list.\r\n\r\n![a simple tagify control](https://raw.github.com/decipherinc/tagify/master/tagify.jpg)\r\n\r\nInstallation\r\n============\r\n\r\nInclude the jquery.tagify.js and jquery.tagify.css after you've included jQuery on the page.\r\n\r\n    <script src='/path/to/jquery.tagify.js'></script>\r\n    <link href='/path/to/jquery.tagify.css' rel=\"stylesheet\" />\r\n\r\nUsage\r\n=====\r\n\r\nCreate a tagified UI control:\r\n\r\n    $('#my_text_input').tagify();\r\n\r\nOptionally you can pass to tagify an options object to control various aspects of tagify.  The available options are:\r\n\r\n\t{\r\n\t\t//space delimited string of classes to add to tags (allows for custom styling of your tags)\r\n\t\taddClassToTag: '',\r\n\r\n\t\t//the delimiter the original input should be split on to create the tags\r\n\t\tdelimiter: ',',\r\n\r\n\t\t//character codes that should trigger the \"add\" tag functions\r\n\t\taddNewDelimiter: [13, 44, 188, 32],\r\n\r\n\t\t//callback to be run immediately after a tag has been added\r\n\t\taddCb: $.noop,\r\n\r\n\t\t//callback to be run immediately after a tag has been removed \r\n\t\tremoveCb: $.noop,\r\n\r\n\t\t//the placeholder text for the tagify input\r\n\t\tplaceholder: '',\r\n\r\n\t\t//a regex to validate tags against\r\n\t\tinputValidation: false,\r\n\r\n\t\t//button text for taggify button, if it's shown\r\n\t\tbuttonText: 'go',\r\n\r\n\t\t//whether or not to show the button for the tagify input\r\n\t\tshowButton: false,\r\n\r\n\t\t//should duplicate tags be removed?\r\n\t\tremoveDupes: true,\r\n\r\n\t\t//preview puts the contents of the original input into the tagify input, useful for copying the string value that tagify is creating for you\r\n\t\tshowPreviewIcon: false,\r\n\r\n\t\t//a title attribute for the preview icon\r\n\t\tpreviewTitle: 'Click to view the tag values as a string. Useful for copy / paste into other tagify inputs.'\r\n\t\t\r\n\t\t//if set to a number, only maxTagLimit amount of tags will be allowed.\r\n\t\tmaxTagLimit: null,\r\n\r\n\t\t//used as placeholder text for the tagify input if the max tag limit is reached\r\n\t\tmaxTagLimitMsg: 'Max tag limit reached.',\r\n\r\n\t};\r\n\r\nMethods\r\n=======\r\n\r\n**reset** - ```$input.tagify('reset');``` \r\n\r\nReset the tagified input to an empty state.  Note: This will remove any tags, and empty the input generated by tagify, but it does not remove the instance from the node.\r\n\r\nExamples\r\n========\r\n\r\nShow me a Tagify UI that has:\r\n\r\n* [no options](http://jsfiddle.net/dosl/7PxkD/)\r\n* [a button for triggering add functions](http://jsfiddle.net/dosl/QrY8S/)\r\n* [input validation](http://jsfiddle.net/dosl/4ENs4/)\r\n* [placeholder text](http://jsfiddle.net/dosl/su4cL/)\r\n* [add / remove callback functions](http://jsfiddle.net/dosl/pkwh3/)\r\n* [a preview icon (useful for getting the string value of the original input)](http://jsfiddle.net/dosl/hRGYk/)\r\n* [a max tag limit](http://jsfiddle.net/dosl/uSC7J/)\r\n* [custom tag styles](http://jsfiddle.net/dosl/bku2S/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}